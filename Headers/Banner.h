//
// Created by tadas on 10/11/22.
//

#ifndef RICEIFY_BANNER_H
#define RICEIFY_BANNER_H
#define RICE_SIZE 4
#include <iostream>
#include "Colors.h"

class Banner{
    private:
    Colors cols = *new Colors();
    protected:
    std::string banners[RICE_SIZE]
            =  {Colors::RandomColor() +
                " /$$$$$$$  /$$                     /$$  /$$$$$$          \n"
               "| $$__  $$|__/                    |__/ /$$__  $$         \n"
               "| $$  \\ $$ /$$  /$$$$$$$  /$$$$$$  /$$| $$  \\__//$$   /$$\n"
               "| $$$$$$$/| $$ /$$_____/ /$$__  $$| $$| $$$$   | $$  | $$\n"
               "| $$__  $$| $$| $$      | $$$$$$$$| $$| $$_/   | $$  | $$\n"
               "| $$  \\ $$| $$| $$      | $$_____/| $$| $$     | $$  | $$\n"
               "| $$  | $$| $$|  $$$$$$$|  $$$$$$$| $$| $$     |  $$$$$$$\n"
               "|__/  |__/|__/ \\_______/ \\_______/|__/|__/      \\____  $$\n"
               "                                                /$$  | $$\n"
               "                                               |  $$$$$$/\n"
               "                                                \\______/ " + Colors::ResetColor(),
               Colors::RandomColor() +
               "  _____  _          _  __       \n"
               " |  __ \\(_)        (_)/ _|      \n"
               " | |__) |_  ___ ___ _| |_ _   _ \n"
               " |  _  /| |/ __/ _ \\ |  _| | | |\n"
               " | | \\ \\| | (_|  __/ | | | |_| |\n"
               " |_|  \\_\\_|\\___\\___|_|_|  \\__, |\n"
               "                           __/ |\n"
               "                          |___/ " + Colors::ResetColor(),
               Colors::RandomColor() +
               "   ____                  ____ U _____ u             _____  __   __ \n"
               "U |  _\"\\ u     ___    U /\"___|\\| ___\"|/    ___     |\" ___| \\ \\ / / \n"
               " \\| |_) |/    |_\"_|   \\| | u   |  _|\"     |_\"_|   U| |_  u  \\ V /  \n"
               "  |  _ <       | |     | |/__  | |___      | |    \\|  _|/  U_|\"|_u \n"
               "  |_| \\_\\    U/| |\\u    \\____| |_____|   U/| |\\u   |_|       |_|   \n"
               "  //   \\\\_.-,_|___|_,-._// \\\\  <<   >>.-,_|___|_,-.)(\\\\,-.-,//|(_  \n"
               " (__)  (__)\\_)-' '-(_/(__)(__)(__) (__)\\_)-' '-(_/(__)(_/ \\_) (__)" + Colors::ResetColor(),
               Colors::RandomColor() +
               "____/\\\\\\\\\\\\\\\\\\_____________________________________________________/\\\\\\\\\\_______________        \n"
               " __/\\\\\\///////\\\\\\_________________________________________________/\\\\\\///________________       \n"
               "  _\\/\\\\\\_____\\/\\\\\\____/\\\\\\_______________________________/\\\\\\_____/\\\\\\_________/\\\\\\__/\\\\\\_      \n"
               "   _\\/\\\\\\\\\\\\\\\\\\\\\\/____\\///______/\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\__\\///___/\\\\\\\\\\\\\\\\\\_____\\//\\\\\\/\\\\\\__     \n"
               "    _\\/\\\\\\//////\\\\\\_____/\\\\\\___/\\\\\\//////____/\\\\\\/////\\\\\\__/\\\\\\_\\////\\\\\\//_______\\//\\\\\\\\\\___    \n"
               "     _\\/\\\\\\____\\//\\\\\\___\\/\\\\\\__/\\\\\\__________/\\\\\\\\\\\\\\\\\\\\\\__\\/\\\\\\____\\/\\\\\\__________\\//\\\\\\____   \n"
               "      _\\/\\\\\\_____\\//\\\\\\__\\/\\\\\\_\\//\\\\\\________\\//\\\\///////___\\/\\\\\\____\\/\\\\\\_______/\\\\_/\\\\\\_____  \n"
               "       _\\/\\\\\\______\\//\\\\\\_\\/\\\\\\__\\///\\\\\\\\\\\\\\\\__\\//\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\____\\/\\\\\\______\\//\\\\\\\\/______ \n"
               "        _\\///________\\///__\\///_____\\////////____\\//////////__\\///_____\\///________\\////________" + Colors::ResetColor()};
    public:

    void GetRandomBanner(){
        std::random_device rd;
        std::mt19937 gen(rd());
        std::uniform_int_distribution<> dis(0, 1);
        std::cout << banners[dis(gen)] << std::endl;
    }
};
#endif //RICEIFY_BANNER_H
